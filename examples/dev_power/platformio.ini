; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
; 
; Note the board name is defined in e.g. .platformio/platforms/espressif32/boards/ttgo-lora32-v21.json
; and variants are in ~/.platformio/packages/framework-arduinoespressif32/variants/
; or ~/.platformio/packages/framework-arduinoespressif8266/variants


; custom common options

[platformio]
name: Frugal-IoT SHT30
description: Frugal IoT - Temperature and Humidity Sensor with SHT30
src_dir = .

[common]
; These are flags common to pretty much all frugal-iot projects
build_flags_frugaliot =
    -D SYSTEM_POWER_DEBUG
    ;'-D LANGUAGE_DEFAULT="id"' ; Default language for portal (if not en) - de,nl,id currently supported
    -D SYSTEM_DISCOVERY_DEBUG
    -D SYSTEM_WIFI_DEBUG
    -D SYSTEM_MQTT_DEBUG
    -D SYSTEM_FRUGAL_DEBUG
    ;-D SYSTEM_OTA_DEBUG
    ;-D DEBUG_HTTP_UPDATE=Serial.printf     ; Debug OTA
    ;-D SYSTEM_WIFI_SCANPERIOD=50000        ; Slow down scanning so can easier debug captive portal
    ;-D DEBUG_DNSSERVER ; If captive portal not seeing requests - as happening on ESP8266
    ;-D SYSTEM_MEMORY_DEBUG ; cos seeing intermittent crash after some period (>7 mins)

; flags that apply only in main (the library can see them, but doesnt need them)
build_flags_main = 

; project specific flags that are needed by the library 
; - being phased out (apart from debug flags) in favor of parameters from main.cpp
; but may be used where impact is across files, especially temporarily, for example where refactoring
build_flags_library = 
    ; Specific to SHT if using that for testing
    ;-D SENSOR_SHT_DEBUG ; Comment out if dont want debugging
    ;-D SENSOR_SHT_ADDRESS=0x45 ; 0x44 (default) or 0x45 for D1 shields
    ;-D SYSTEM_POWER_DEBUG

; build flags that only relate to boards with LoRaMesher
build_flags_loramesher = 
    ; LoRaMesher, for now, has a lot of flags here, will move some of this to main.cpp
    ; Both the t3_s3 and the ttgo boards we are testing use the same module
    ; feel free to move into per-board [env] (and submit a PR) if your own setup differs
    -D SYSTEM_LORAMESHER_MODULE=LoraMesher::LoraModules::SX1276_MOD
    -D SYSTEM_LORAMESHER_BAND=915.0F ; 868.0F for Europe, 915.0F for US/AU; 433.0F for Asia
    -D SYSTEM_LORAMESHER_DEBUG ; to get debugging at the app (not LoRaMesher or Radio) layers
    ;-D CORE_DEBUG_LEVEL=5 ; To get lots of debugging out of LoraMesher
    ;-D RADIOLIB_DEBUG_BASIC ; Debugging from RadioLib 

; Flags specific to project, but vary across dev-boards or variants
build_flags = 
    ${common.build_flags_frugaliot}
    ${common.build_flags_main}
    ${common.build_flags_library}

lib_deps = 
    Frugal-IoT
    ; Libraries specific to this hardware - sensor, actuator, etc
    ; robtillaart/SHT85 ; included by frugal-iot (in library.json & library.properties)

; Group of build_flags_powerxxx so can be mixed and matched with different processors below
build_flags_powerlightwifi = 
    -D CORE_DEBUG_LEVEL=99 ; To get lots of debugging around sleep and other tasks
    ; Following are attempt to get LIGHTWIFI to work
    -D CONFIG_FREERTOS_USE_TRACE_FACILITY=1
    -D CONFIG_FREERTOS_USE_STATS_FORMATTING_FUNCTIONS=1
    -D CONFIG_FREERTOS_IDLE_TIME_BEFORE_SLEEP=2

[env]
; If set monitor_speed to anything other than 460800 then need 
; frugal_iot.startSerial(newspeed, 5000);
monitor_speed = 460800
upload_speed = 460800
framework = arduino
; Unclear if next line causes problems either way - if commented out then doesnt recognize uploaded system 
board_build.filesystem = littlefs ; Use LittleFS instead of SPIFFS

[env:sht30_lolin_c3_pico]
platform = espressif32
board = lolin_c3_mini ; use c3_mini board defs - but note define below which is special cased
board_build.variant = lolin_c3_pico
build_flags = 
    ${common.build_flags}
    ${common.build_flags_powerlightwifi}
    -D ARDUINO_LOLIN_C3_PICO ; if using C3_PICO use lolin_c3_mini as board and define here
    ; PR submitted https://github.com/espressif/arduino-esp32/pull/11851
    ; Until then patched into variant file but if that is auto-updated, can define below
    ; Remvoe this comment when PR accepted, and new version of Arudino-esp32 gets installed
    ; See Home(bottom left)/Platforms/espresif32/updates (none as of 2025sep23 even though PR merged)
    ;-D RGB_BUILTIN_LED_COLOR_ORDER=LED_COLOR_ORDER_RGB
lib_compat_mode = strict
board_build.partitions = huge_app.csv
lib_deps = 
    ${common.lib_deps}
  
[env:powerlightwifi_s2_mini]
platform = espressif32
board = lolin_s2_mini
build_flags = 
    ${common.build_flags}
    ${common.build_flags_powerlightwifi}
    -D ACTUATOR_LEDBUILTIN_DEBUG
lib_compat_mode = strict
lib_deps = 
    ${common.lib_deps}

[env:powerlightwifi_d1_mini] ; also for d1_mini_pro v2 (green) which does not work with d1_mini_pro board defs
board = d1_mini
platform = espressif8266
build_flags =
    ${common.build_flags}
    ${common.build_flags_powerlightwifi}
lib_compat_mode = strict
lib_deps = 
    ${common.lib_deps}

[env:powerlightwifi_t3s3]
platform = espressif32 ; 54.3.21
board = lilygo-t3-s3
board_build.variant = lilygo_t3_s3_sx127x
build_flags = 
    ${common.build_flags}
    ${common.build_flags_loramesher}
    ${common.build_flags_powerlightwifi}
; Need huge_app.csv as SSD and GFX push it over the size
board_build.partitions = huge_app.csv
lib_ldf_mode = chain
lib_compat_mode = strict
lib_deps = 
    ${common.lib_deps}
    jaimi5/LoRaMesher
    ;https://github.com/LoRaMesher/LoRaMesher.git ; till isGatewayRole merged
    adafruit/Adafruit SSD1306@^2.5.0
    adafruit/Adafruit GFX Library@^1.10.13
