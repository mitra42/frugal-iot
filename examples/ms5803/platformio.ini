; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
; 
; custom common options

[platformio]
name: Frugal-IoT SHT30
description: Frugal IoT - Temperature and Humidity Sensor with SHT30
src_dir = .

[common]
; These are flags common to pretty much all frugal-iot projects
build_flags_frugaliot =
    -D SYSTEM_POWER_DEBUG
    ;'-D LANGUAGE_DEFAULT="id"' ; Default language for portal (if not en) - de,nl,id currently supported
    -D SYSTEM_DISCOVERY_DEBUG
    -D SYSTEM_WIFI_DEBUG
    -D SYSTEM_MQTT_DEBUG
    -D SYSTEM_FRUGAL_DEBUG
   

; flags that apply only in main (the library can see them, but doesnt need them)
build_flags_main = 

; project specific flags that are needed by the library - being phased out (apart from debug flags) in favor of parameters from main.cpp
build_flags_library = 
    -D SENSOR_MS5803_DEBUG
    ;-D SENSOR_MS5803_SPI 15 // CS Pin for SPI on D1-mini is D8=15 probably different on ESP32 // SPI not currently working - needs revising to match system_i2c patterns
#endif

; Flags specific to project, but vary across dev-boards or variants
build_flags = 
    ${common.build_flags_frugaliot}
    ${common.build_flags_main}
    ${common.build_flags_library}

lib_deps = 
    https://github.com/mitra42/frugal-iot; TODO-141 remove branch when merged
    ; Libraries specific to this hardware - sensor, actuator, etc
    ; robtillaart/SHT85 ; included by frugal-iot (in library.json & library.properties)
    
[env]
; If set monitor_speed to anything other than 460800 then need 
; frugal_iot.startSerial(newspeed, 5000);
monitor_speed = 460800
upload_speed = 460800
framework = arduino
;board_build.filesystem = littlefs ; Use LittleFS instead of SPIFFS

[env:ms5803_lolin_c3_pico]
platform = espressif32
board = lolin_c3_mini ; use c3_mini board defs - but note define below which is special cased
build_flags = 
    ${common.build_flags}
    -D ARDUINO_LOLIN_C3_PICO ; if using C3_PICO use lolin_c3_mini as board and define here
    '-D SYSTEM_OTA_KEY="ms5803_lolin_c3_pico"'
lib_compat_mode = strict
lib_deps = 
    ${common.lib_deps}

[env:ms5803_lolin_s2_mini]
platform = espressif32
board = lolin_s2_mini
build_flags = 
    ${common.build_flags}
    '-D SYSTEM_OTA_KEY="ms5803_lolin_s2_mini"'
lib_compat_mode = strict
lib_deps = 
    ${common.lib_deps}

[env:ms5803_d1_mini_pro] ; Including V2 (Green) V3 (ext antenna) V4 (I2C)
platform = espressif8266
board = d1_mini_pro
build_flags = 
    ${common.build_flags}
    '-D SYSTEM_OTA_KEY="ms5803_lolin_d1_mini_pro"'
lib_compat_mode = strict
lib_deps = 
    ${common.lib_deps}

[env:ms5803_d1_mini]
platform = espressif8266
board = d1_mini
build_flags = 
    ${common.build_flags}
    '-D SYSTEM_OTA_KEY="ms5803_lolin_d1_mini"'
lib_compat_mode = strict
lib_deps = 
    ${common.lib_deps}
